
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## Determine whether SNSC correlates with Degrees
> 
> subjects <- c("ANGO","CLFR","MYTP","TRCO","PIGL","SNNW","LDMW","FLTM","EEPA","DNLN","CRFO","ANMS","MRZM","MRVV","MRMK","MRMC","MRAG","MNGO","LRVN")
> 
> cor_values1 <- c()
> cor_values3 <- c()
> for (ss in subjects)
+ {
+     d1 <- as.matrix(read.table(paste("/mnt/tier2/urihas/Andric/steadystate/links_files5p/",ss,".1.5p_linksthresh_proportion.degrees_gray", sep = "")))   # these are the degrees
+     d3 <- as.matrix(read.table(paste("/mnt/tier2/urihas/Andric/steadystate/links_files5p/",ss,".3.5p_linksthresh_proportion.degrees_gray", sep = "")))   # these are the degrees
+     snsc_with_filtvals <- as.matrix(read.table(paste("/mnt/tier2/urihas/Andric/steadystate/",ss,"/modularity5p/set_consistency2/preserved_",ss,"_median5p_20vxFltr.txt", sep = "")))
+     print(c(ss, length(which(snsc_with_filtvals == 777)), round(length(which(snsc_with_filtvals == 777))/length(snsc_with_filtvals),3)))
+     snsc <- snsc_with_filtvals
+     snsc[which(snsc_with_filtvals == 777)] = NA
+     cor_values1 <- c(cor_values1, cor(snsc, d1, use = "complete.obs")[[1]])
+     cor_values3 <- c(cor_values3, cor(snsc, d3, use = "complete.obs")[[1]])
+     print(c(cor.test(snsc,d1)$p.value, cor.test(snsc,d3)$p.value))
+ }
[1] "ANGO" "3"    "0"   
[1] 0.000000e+00 1.327027e-11
[1] "CLFR" "5"    "0"   
[1] 0 0
[1] "MYTP"  "454"   "0.042"
[1] 0 0
[1] "TRCO"  "67"    "0.006"
[1] 0.356889581 0.001014727
[1] "PIGL"  "51"    "0.005"
[1] 0.55997463 0.07751897
[1] "SNNW"  "252"   "0.021"
[1] 0 0
[1] "LDMW"  "73"    "0.007"
[1] 3.457394e-35 1.388385e-57
[1] "FLTM"  "560"   "0.046"
[1] 1.789902e-11 9.989592e-07
[1] "EEPA"  "374"   "0.034"
[1] 1.06165e-07 0.00000e+00
[1] "DNLN" "457"  "0.04"
[1] 0.2989294972 0.0002876053
[1] "CRFO"  "769"   "0.065"
[1] 0 0
[1] "ANMS"  "159"   "0.015"
[1] 0 0
[1] "MRZM"  "1106"  "0.122"
[1] 0.000000e+00 1.090172e-06
[1] "MRVV"  "83"    "0.009"
[1] 0.5392771 0.9802573
[1] "MRMK"  "451"   "0.041"
[1] 9.102978e-01 1.598821e-07
[1] "MRMC"  "991"   "0.077"
[1] 5.352698e-08 1.411538e-11
[1] "MRAG"  "43"    "0.004"
[1] 0 0
[1] "MNGO"  "13"    "0.001"
[1] 0.0000000 0.3403102
[1] "LRVN"  "22"    "0.002"
[1] 1.517637e-06 0.000000e+00
> 
> print(t.test(atanh(cor_values1)))   # fisher transform correlation values & test significance against 'Highly ordered' condition degrees

	One Sample t-test

data:  atanh(cor_values1) 
t = 3.0213, df = 18, p-value = 0.007338
alternative hypothesis: true mean is not equal to 0 
95 percent confidence interval:
 0.02177929 0.12121061 
sample estimates:
 mean of x 
0.07149495 

> print(t.test(atanh(cor_values3)))   # fisher transform correlation values & test significance against 'Random' condition degrees

	One Sample t-test

data:  atanh(cor_values3) 
t = 3.1376, df = 18, p-value = 0.005691
alternative hypothesis: true mean is not equal to 0 
95 percent confidence interval:
 0.02326974 0.11758963 
sample estimates:
 mean of x 
0.07042968 

> 
> 
> proc.time()
   user  system elapsed 
  0.585   0.025   1.051 
